{"version":3,"sources":["components/Filter.js","components/AddPersonForm.js","components/Person.js","components/PersonList.js","services/persons.js","components/Notification.js","components/App.js","index.js"],"names":["Filter","filterValue","handleFilterValueChange","value","onChange","AddPersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Person","person","handlePersonDelete","name","number","onClick","PersonList","persons","map","key","url","axios","get","then","response","data","post","put","id","delete","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","setFilterValue","setNotification","useEffect","personService","catch","error","console","log","notify","visiblePersons","filter","toLowerCase","includes","setTimeout","event","target","preventDefault","existingPerson","find","window","confirm","updatedPerson","createdPerson","concat","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2407f210.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ filterValue, handleFilterValueChange }) => {\n  return (\n    <div>\n      filter shown with:\n      <input value={filterValue} onChange={handleFilterValueChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst AddPersonForm = ({\n  addPerson,\n  newName,\n  handleNameChange,\n  newNumber,\n  handleNumberChange\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddPersonForm;\n","import React from \"react\";\n\nconst Person = ({ person, handlePersonDelete }) => {\n  return (\n    <li>\n      <p>\n        {person.name} {person.number}\n      </p>\n      <button onClick={() => handlePersonDelete(person)}>delete</button>\n    </li>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst PersonList = ({ persons, handlePersonDelete }) => {\n  return (\n    <ul>\n      {persons.map(person => (\n        <Person\n          key={person.name}\n          person={person}\n          handlePersonDelete={handlePersonDelete}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PersonList;\n","import axios from \"axios\";\nconst url = \"/api/persons\";\n\nconst getPersons = () => {\n  const request = axios.get(url);\n  return request.then(response => response.data);\n};\n\nconst createPerson = person => {\n  const request = axios.post(url, person);\n  return request.then(response => response.data);\n};\n\nconst updatePerson = person => {\n  const request = axios.put(`${url}/${person.id}`, person);\n  return request.then(response => response.data);\n};\n\nconst deletePerson = person => axios.delete(`${url}/${person.id}`);\n\nexport default { getPersons, createPerson, updatePerson, deletePerson };\n","import React from \"react\";\n\nconst Notification = ({ notification }) =>\n  notification === null ? null : (\n    <div className={`notification ${notification.type}`}>\n      {notification.message}\n    </div>\n  );\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./Filter\";\nimport AddPersonForm from \"./AddPersonForm\";\nimport PersonList from \"./PersonList\";\nimport personService from \"./../services/persons\";\nimport Notification from \"./Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterValue, setFilterValue] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personService\n      .getPersons()\n      .then(persons => setPersons(persons))\n      .catch(error => {\n        console.log(error);\n        notify(\"Could not load persons\", \"error\");\n      });\n  }, []);\n\n  const visiblePersons =\n    filterValue !== \"\"\n      ? persons.filter(person =>\n          person.name.toLowerCase().includes(filterValue.toLowerCase())\n        )\n      : persons;\n\n  /**\n   * Display notification message\n   * @param {string} message Message to be displayed\n   * @param {string} type Type of notification: \"info\" | \"error\"\n   */\n  const notify = (message, type) => {\n    setNotification({ message, type });\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    const existingPerson = persons.find(person => person.name === newName);\n    if (!existingPerson) {\n      personService\n        .createPerson({ name: newName, number: newNumber })\n        .then(createdPerson => {\n          setPersons(persons.concat(createdPerson));\n          notify(`Added ${createdPerson.name}`, \"info\");\n        })\n        .catch(error => {\n          console.error(error);\n          notify(\n            `Could not add ${newName}. ${error.response.data.error}`,\n            \"error\"\n          );\n        });\n    } else {\n      const confirm = window.confirm(\n        `${existingPerson.name} is already added to phonebook, replace the old number with new one?`\n      );\n\n      if (confirm) {\n        personService\n          .updatePerson({ ...existingPerson, number: newNumber })\n          .then(updatedPerson => {\n            setPersons(\n              persons.map(person =>\n                person.name !== updatedPerson.name ? person : updatedPerson\n              )\n            );\n            notify(`Updated ${updatedPerson.name} phone number`, \"info\");\n          })\n          .catch(error => {\n            console.error(error);\n            notify(\n              `Could not update ${existingPerson.name} phone number`,\n              \"error\"\n            );\n          });\n      }\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const handleFilterValueChange = event => {\n    setFilterValue(event.target.value);\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const handlePersonDelete = person => {\n    if (window.confirm(`Delete ${person.name}`)) {\n      personService\n        .deletePerson(person)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== person.id));\n          notify(`Deleted ${person.name}`, \"info\");\n        })\n        .catch(error => {\n          console.error(error);\n          notify(`Could not delete ${person.name}`, \"error\");\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter\n        filterValue={filterValue}\n        handleFilterValueChange={handleFilterValueChange}\n      />\n      <h2>Add a new</h2>\n      <AddPersonForm\n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <PersonList\n        persons={visiblePersons}\n        handlePersonDelete={handlePersonDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}